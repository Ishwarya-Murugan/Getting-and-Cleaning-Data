summarise(mtcars, mean(mpg, na.rm=T))
head(iris)
iris %>% filter(Species='setosa')
iris %>% filter(Species=='setosa')
iris %>% nrow(filter(Species=='setosa', Petal.Length/Petal.Width < 10))
iris %>% filter(Species=='setosa', Petal.Length/Petal.Width < 10)
out<- iris %>% filter(Species=='setosa', Petal.Length/Petal.Width < 10)
nrow(out)
dim(mtcars)
str(mtcars)
names(mtcars)
summarize(mtcars)
x <- c(19, 13, NA, 17, 5, 16, NA, 20, 55, 22,33,14,25, NA,29, 56)
is.na(x)
x[is.na(x)]
median(x)
median(x,rm.na=T)
median(x,rm.na=T)
median(x,na.rm=T)
x[is.na(x)] <- mean(x, na.rm=T)
x
Outlierset <- c(19, 13, 29, 17, 5, 16, 18, 20, 55, 22,33,14,25, 10,29, 56)
summary(Outliers)
summary(Outlierset)
Outlierset[Outlierset<36]
Cleanset <- Outlierset[Outlierset<36]
library(dplyr)
mtcars
mtcars1 <- mtcars[,1:6]
mtcars1
filter(mtcars1, mpg>20, cyl==6)
mtcars1 <- select(mtcars, 1:6)
mtcars1
mtcars1 <- mutate(select(mtcars, 1:6), cars=row.names())
mtcars1 <- mutate(select(mtcars, 1:6), cars=row.names(mtcars1))
mtcars1
filter(mtcars1, mpg>20, cyl==6)
mtcars1 %>% arrange(cyl, desc(mpg))
myselect <- select(mtcars, mpg, hp)
mutate(mtcars1, mpg2=mpg * mpg, disp2 = disp * disp)
summary(mtcars$mpg)
summary(mtcars$mpg, mean)
summary(mtcars$mpg, mean())
summary(mtcars, Mean= mean(mpg))
summarise(mtcars, Mean= mean(mpg))
summarise(mtcars, Mean= mean(mpg), Max_mpg = max(mpg))
summarise(mtars$mpg)
summarise(mtcars$mpg)
summarise(mtcars, Mean= mean(mpg), Max_mpg = max(mpg), Quantile = quantile(mpg))
summarise(mtcars, Mean= mean(mpg), Max_mpg = max(mpg), quantile(mpg))
summarise(mtcars, Mean= mean(mpg), Max_mpg = max(mpg), quantile(mpg, 0.25))
summarise(mtcars, Mean= mean(mpg), Max_mpg = max(mpg), Quantile= quantile(mpg, 0.25))
install.packages(("stringr"))
install.packages(("stringr"))
x = "Hello"
str_c(x, "Nathan")
library(stringr)
str_c(x, "Nathan")
?str_c
str_c(x, "Nathan", sep=" ")
x = "hop a little, jump a little, eat a little, drive a little"
X = "hop a little, jump a little, eat a little, drive a little"
?gsub
?grep
grep("little", X)
grepl("little", X)
gsub("little", X)
grep("little", X)
str_count(X, "little")
getwd()
house_Data <- read_csv("American Community.csv")
house_Data <- read.csv("American Community.csv")
summary(house_Data)
names(house_Data)
heads(house_Data)
head(house_Data)
names(house_Data)
house_Data[house_Data$ACR==3]
names(house_Data)
head(house_Data$ACR)
house_Data[house_Data$ACR==3,]
house_Data[(house_Data$ACR==3&house_data$AGS==6),]
house_Data[(house_Data$ACR==3&house_Data$AGS==6),]
(house_Data$ACR==3&house_Data$AGS==6)
agricultureLogical<- (house_Data$ACR==3&house_Data$AGS==6)
which(agricultureLogical)
getwd()
house_Data <- read.csv("American Community.csv")
summary(house_Data)
names(house_Data)
head(house_Data$ACR)
agricultureLogical<- (house_Data$ACR==3&house_Data$AGS==6)
which(agricultureLogical)
readJpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
install.packages("jpeg")
library(jpeg)
library(help=jpeg)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
readJPEG("getdata_jeff.jpg")
readJPEG("getdata_jeff.jpg", source = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", source = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native= TRUE)
readJPEG("getdata_jeff.jpg", native = TRUE)
jpeg_val <- readJPEG("getdata_jeff.jpg", native = TRUE)
quantile(jpeg_val)
quantile(jpeg_val, 0.25)
quantile(jpeg_val, 0.25, 0.5)
quantile(jpeg_val, c(0.25, 0.5))
quantile(jpeg_val, c(0.30, 0.8))
edu_data <- read.csv("getdata_data_EDSTATS_Country.csv")
GDP_data <- read.csv("getdata_data_GDP.csv")
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=TRUE)
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=TRUE, skip=2)
head(GDP_data)
?read.csv
GDP_data <- read.csv("getdata_data_GDP.csv", header=TRUE, skip=2, sep=",")
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=TRUE, skip=3, sep=",")
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=TRUE, skip=5, sep=",")
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=TRUE, skip=4, sep=",")
head(GDP_data)
names(GDP_data)<- read.csv("getdata_data_GDP.csv", header=TRUE, skip=3, sep=",", nrows=1)
head(GDP_data)
read.csv("getdata_data_GDP.csv", header=TRUE, skip=3, sep=",", nrows=1)
read.csv("getdata_data_GDP.csv", skip=3, sep=",", nrows=1)
read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1)
names(GDP_data)<- read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1)
head(GDP_data)
colnames(GDP_data)<- read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1)
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=4, sep=",")
colnames(GDP_data)<- read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1)
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=4, sep=",")
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=TRUE, skip=4, sep=",")
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=TRUE, skip=4, sep=",")
head(GDP_data)
headers<- read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1)
headers
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=4, sep=",")
header1 <- read.csv("getdata_data_GDP.csv", skip = 2,header = FALSE, nrows = 1, sep=",")
headers<- read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1)
header2<- read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1)
paset0(header1, header2)
paset(header1, header2)
paste0(header1, header2)
header1 <- read.csv("getdata_data_GDP.csv", skip = 2,header = FALSE, nrows = 1, sep=",")
header2<- read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1)
paste0(header1, header2)
paste(header1, header2)
header1
header2
header1 <- read.csv("getdata_data_GDP.csv", skip = 2,header = FALSE, nrows = 1, sep=",", as.is=TRUE)
header1
header2<- read.csv("getdata_data_GDP.csv", header= FALSE, skip=3, sep=",", nrows=1, as.is=TRUE)
header2
paste(header1, header2)
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=4, sep=",", names=c("country_code","ranking","economy", "GDP_value"))
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=4, sep=",", col.names=c("country_code","ranking","economy", "GDP_value"))
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=4, sep=",", col.names=c("country_code","ranking","economy", "GDP_value"), nrows=195)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=4, sep=",",  nrows=195)
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=195)
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=195, colClasses = c( rep("character",4), rep("NULL",5))
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=195, colClasses = c(rep("character",4), rep("NULL",5)))
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=195, colClasses = c(rep("character",5), rep("NULL",5)))
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=195, colClasses = c("character", "Integer", "NULL", "character", "numeric" rep("NULL",5)))
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=195, colClasses = c("character", "Integer", "NULL", "character", "numeric", rep("NULL",5)))
head(GDP_data)
tail(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "Integer", "NULL", "character", "numeric", rep("NULL",5)))
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "Integer", "NULL", "character", "character", rep("NULL",5)))
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "characterr", "NULL", "character", "character", rep("NULL",5)))
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)))
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)),col.names=c("country_code","ranking","economy", "GDP_value"))
head(GDP_data)
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)))
names(GDP_data)
names(GDP_data) <- c("country_code","ranking","economy", "GDP_value"),
names(GDP_data) <- c("country_code","ranking","economy", "GDP_value")
head(GDP_data)
edu_data <- read.csv("getdata_data_EDSTATS_Country.csv")
head(edu_data)
names(GDP_data) <- c("Countrycode","Ranking","Economy", "GDP_value")
head(GDP_data)
joined <- inner_join(GDP_data, edu_data, by="Countrycode" )
library(dplyr)
joined <- inner_join(GDP_data, edu_data, by="Countrycode" )
head(edu_data)
names(GDP_data) <- c("CountryCode","Ranking","Economy", "GDPValue")
head(GDP_data)
joined <- inner_join(GDP_data, edu_data, by="CountryCode" )
head(joined, 20)
GDP_Edu <- inner_join(GDP_data, edu_data, by="CountryCode" )
ord_GDP_edu <- arrange(GDP_Edu, desc(as.numeric(GDPValue)))
head(ord_GDP_edu, 20)
tail(ord_GDP_edu, 20)
tail(ord_GDP_edu, 10)
tail(ord_GDP_edu)
ord_GDP_edu <- arrange(GDP_Edu, desc(as.numeric(Ranking)))
head(ord_GDP_edu, 20)
tail(ord_GDP_edu)
tail(GDP_data)
head(ord_GDP_edu, 20)
getwd()
house_Data <- read.csv("American Community.csv")
summary(house_Data)
names(house_Data)
head(house_Data$ACR)
agricultureLogical<- (house_Data$ACR==3&house_Data$AGS==6)
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
library(help=jpeg)
jpeg_val <- readJPEG("getdata_jeff.jpg", native = TRUE)
quantile(jpeg_val, c(0.30, 0.8))
tail(ord_GDP_edu)
head(ord_GDP_edu, 20)
tail(ord_GDP_edu)
GDP_Edu %>% select(ranking, Income.Group)
GDP_Edu %>% select(Ranking, Income.Group)
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>%
summarise()
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>%
summarise(mean(Ranking))
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>%
summarise(mean(Ranking, rm.na=TRUE))
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>%
summarise(mean(Ranking, na.rm=TRUE))
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group)
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>%
summarise(mean(na.rm=TRUE))
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>%
summarise(mean(Ranking, na.rm=TRUE))
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>%
summarise(AvgRanking = mean(Ranking, na.rm=TRUE))
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>% summarise(AvgRanking = mean(Ranking, na.rm=TRUE))
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>% summarise(AvgRanking = mean(as.interger(Ranking), na.rm=TRUE))
GDP_Edu %>% select(Ranking, Income.Group) %>% group_by(Income.Group) %>% summarise(AvgRanking = mean(as.integer(Ranking), na.rm=TRUE))
GDP_Edu %>% select(Ranking, Income.Group)
GDP_Edu %>% select(Ranking, Income.Group) % summarise(QuantileGrp= quantile(Ranking) )
GDP_Edu %>% select(Ranking, Income.Group) %>% summarise(QuantileGrp= quantile(Ranking) )
GDP_Edu %>% select(Ranking, Income.Group) %>% summarise(QuantileGrp= quantile(as.integer(Ranking)) )
GDP_Edu %>% select(Ranking, Income.Group)%>% group_by(Income.Group) %>% summarise(QuantileGrp= quantile(as.integer(Ranking)) )
summarise(mtcars, Mean= mean(mpg), Max_mpg = max(mpg), Quantile= quantile(mpg))
GDP_Edu %>% select(Ranking, Income.Group) %>% summarise(QuantileGrp= quantile(as.integer(Ranking,0)) )
GDP_Edu %>% select(Ranking, Income.Group) %>% summarise(QuantileGrp= quantile(as.integer(Ranking),0) )
GDP_Edu %>% select(Ranking, Income.Group) %>% summarise(QuantileGrp= quantile(as.integer(Ranking),1) )
GDP_Edu %>% select(Ranking, Income.Group) %>% summarise(QuantileGrp= quantile(as.integer(Ranking),0.25) )
quantile(as.integer(GDP_Edu$Ranking))
table(GDP_edu, quantile(as.integer(GDP_Edu$Ranking)))
table(GDP_Edu, quantile(as.integer(GDP_Edu$Ranking)))
table(GDP_Edu$Income.Group, quantile(as.integer(GDP_Edu$Ranking)))
GDP_Edu %>% select(Ranking, Income.Group) %>% mutate(QuantileGrp= findInterval(as.integer(Ranking)), quantile(as.integer(Ranking),0.25) )
GDP_Edu %>% select(Ranking, Income.Group) %>% mutate(QuantileGrp= findInterval(as.integer(Ranking), quantile(as.integer(Ranking),0.25) ))
GDP_Edu %>% select(Ranking, Income.Group) %>% mutate(QuantileGrp= findInterval(as.integer(Ranking), quantile(as.integer(Ranking)) ))
Quan_inc_Grp[Quan_inc_Grp$QuantileGrp==2]
Quan_inc_Grp <- GDP_Edu %>% select(Ranking, Income.Group) %>% mutate(QuantileGrp= findInterval(as.integer(Ranking), quantile(as.integer(Ranking)) ))
Quan_inc_Grp[Quan_inc_Grp$QuantileGrp==2]
head(Quan_inc_Grp)
Quan_inc_Grp[Quan_inc_Grp$QuantileGrp==2,]
Quan_inc_Grp <- GDP_Edu %>% select(CountryCode, Ranking, Income.Group) %>% mutate(QuantileGrp= findInterval(as.integer(Ranking), quantile(as.integer(Ranking)) ))
head(Quan_inc_Grp)
Quan_inc_Grp[Quan_inc_Grp$QuantileGrp==2,]
High_38 <- tail(ord_GDP_edu, 38)
intersection(High_38$CountryCode, lower_middle$CountryCode)
intersect(High_38$CountryCode, lower_middle$CountryCode)
lower_middle <- Quan_inc_Grp[Quan_inc_Grp$QuantileGrp==2,]
intersect(High_38$CountryCode, lower_middle$CountryCode)
High_38$CountryCode
lower_middle$CountryCode
intersect(High_38$CountryCode, lower_middle$CountryCode)
lower_middle <- Quan_inc_Grp[Quan_inc_Grp$QuantileGrp==3,]
intersect(High_38$CountryCode, lower_middle$CountryCode)
lower_middle$CountryCode
High_38$CountryCode
head(Quan_inc_Grp)
head(Quan_inc_Grp,30)
Quan_inc_Grp
tail(ord_GDP_edu)
lower_middle <- Quan_inc_Grp[Quan_inc_Grp$QuantileGrp==4,]
intersect(High_38$CountryCode, lower_middle$CountryCode)
High_38$CountryCode
lower_middle$CountryCode
Quan_inc_Grp <- GDP_Edu %>% select(CountryCode, Ranking, Income.Group) %>% mutate(QuantileGrp= findInterval(as.integer(Ranking), quantile(as.integer(Ranking)),na.rm=TRUE ))
Quan_inc_Grp <- GDP_Edu %>% select(CountryCode, Ranking, Income.Group) %>% mutate(QuantileGrp= findInterval(as.integer(Ranking), quantile(as.integer(Ranking), na.rm=True)))
Quan_inc_Grp <- GDP_Edu %>% select(CountryCode, Ranking, Income.Group) %>% mutate(QuantileGrp= findInterval(as.integer(Ranking), quantile(as.integer(Ranking), na.rm=TRUE)))
Quan_inc_Grp
table(Quan_inc_Grp$QuantileGrp)
table(Quan_inc_Grp$Income.Group, Quan_inc_Grp$QuantileGrp)
lower_middle <- Quan_inc_Grp[(Quan_inc_Grp$QuantileGrp==4 & Quan_inc_Grp$Income.Group== "Lower middle income") ,]
lower_middle$CountryCode
intersect(High_38$CountryCode, lower_middle$CountryCode)
High_38$CountryCode
lower_middle <- Quan_inc_Grp[(Quan_inc_Grp$Income.Group== "Lower middle income") ,]
lower_middle$CountryCode
intersect(High_38$CountryCode, lower_middle$CountryCode)
ord_GDP_edu
which(agricultureLogical)
# Get and set the current working directory to read the input file
getwd()
# Load the GDP data, take care of the title , header lines, and the additional data at the bottome of the file
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)))
# View the rows in the loaded dataframe
head(GDP_data$GDPValue)
# Load the GDP data, take care of the title , header lines, and the additional data at the bottome of the file
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)))
# View the rows in the loaded dataframe
head(GDP_data$GDPValue)
names(GDP_data) <- c("CountryCode","Ranking","Economy", "GDPValue")
# View the rows in the loaded dataframe
head(GDP_data$GDPValue)
names(GDP_data) <- c("CountryNames","Ranking","Economy", "GDPValue")
# View the rows in the loaded dataframe
head(GDP_data$GDPValue)
names(GDP_data) <- c("CountryNames","Ranking","Economy", "GDPValue")
head(GDP_data$GDPValue)
head(GDP_data)
names(GDP_data) <- c("CountryCode","Ranking","Economy", "GDPValue")
names(GDP_data) <- c("CountryCode","Ranking","ContryNames", "GDPValue")
head(GDP_data)
names(GDP_data) <- c("countryCode","ranking","contryNames", "GDPValue")
head(GDP_data)
grep("^United",countryNames)
names(GDP_data) <- c("countryCode","ranking","countryNames", "GDPValue")
head(GDP_data)
grep("^United",countryNames)
head(GDP_data)
grep("^United",countryNames),3
grep("^United",GDP_data$countryNames)
grep("^United",GDP_data$countryNames)[3]
grep("^United",GDP_data$countryNames)[2]
grep("^United",GDP_data$countryNames)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
head(amzn)
sampleTimes = index(amzn)
tail(amzn)
sampleTimes
class(sampleTimes)
head(sampleTimes[(sampleTimes>"2012-01-01")])
head(sampleTimes[(sampleTimes>="2012-01-01" & sampleTimes < "2013-01-01")])
library(lubridate)
wday('2012-01-01')
head(wday(sampleTimes))
head(sampleTimes[(sampleTimes>="2012-01-01" & sampleTimes < "2013-01-01")])
head(wday(sampleTimes))
?wday
head(wday(sampleTimes, label=TRUE))
sampleTimes_2012 <- (sampleTimes[(sampleTimes>="2012-01-01" & sampleTimes < "2013-01-01")])
SampleDays_2012 <-(wday(sampleTimes_2012, label=TRUE))
SampleDays_2012[SampleDays_2012 == "mon"]
SampleDays_2012[SampleDays_2012 == 2]
SampleDays_2012 <-(wday(sampleTimes_2012, label=TRUE))
SampleDays_2012
SampleDays_2012[SampleDays_2012 == "Mon"]
len(SampleDays_2012[SampleDays_2012 == "Mon"])
length(SampleDays_2012[SampleDays_2012 == "Mon"])
length (SampleDays_2012)
length(SampleDays_2012[SampleDays_2012 == "Mon"])
length (SampleDays_2012)
# Get the count for Monday in 2012
length(SampleDays_2012[SampleDays_2012 == "Mon"])
# Load the GDP data, take care of the title , header lines, and the additional data at the bottome of the file
GDP_data <- read.csv("GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)))
GDP_data
# Load the GDP data, take care of the title , header lines, and the additional data at the bottome of the file
GDP <- read.csv("GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)))
names(GDP) <- c("CountryCode","Ranking","Economy", "GDPValue")
GDP
EDu <- read.csv("EDSTATS.csv")
EDU <- read.csv("EDSTATS.csv")
head(EDU)
# Load the GDP data, take care of the title , header lines, and the additional data at the bottome of the file
GDP <- read.csv("GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)))
head(EDU)
?merge
names(GDP) <- c("CountryCode","Ranking","Economy", "GDPValue")
GDP
head(EDU)
names(EDU)
GDP
EDu
EDU
EDU$Special.Notes
?gsub
grep("Fiscal year endEDU",$Special.Notes)
grep("Fiscal year endEDU",EDU$Special.Notes)
EDU$Special.Notes
grep("Fiscal year end",EDU$Special.Notes)
EDU[grep("Fiscal year end",EDU$Special.Notes)]
EDU[grep("Fiscal year end",EDU$Special.Notes),]
EDu_fyear <- EDU[grep("Fiscal year end",EDU$Special.Notes),]
EDU_fyear <- EDU[grep("Fiscal year end",EDU$Special.Notes),]
EDU_fyear$Special.Notes
merge(GDP, EDU_fyear, by= "CountryCode")
GDP_EDU[grep("FIscal year end: June", EDU_fyear$Special.Notes),]
GDP_EDU <- merge(GDP, EDU_fyear, by= "CountryCode")
GDP_EDU[grep("FIscal year end: June", EDU_fyear$Special.Notes),]
GDP_EDU[grep("FIscal year end: June", GDP_EDU$Special.Notes),]
EDU_fyear$Special.Notes
GDP_EDU[grep("Fiscal year end: June", GDP_EDU$Special.Notes),]
length(GDP_EDU[grep("Fiscal year end: June", GDP_EDU$Special.Notes),])
GDP_EDU[grep("Fiscal year end: June", GDP_EDU$Special.Notes),]
?length
dim(GDP_EDU[grep("Fiscal year end: June", GDP_EDU$Special.Notes),])
dim(GDP_EDU[grep("Fiscal year end: June", GDP_EDU$Special.Notes),])[1]
setwd("C:\\Users\\Ishwa\\Desktop\\DataScience\\R\\Getting and Cleaning Data")
head(Idaho_housing)
setwd("C:\\Users\\Ishwa\\Desktop\\DataScience\\R\\Getting and Cleaning Data")
# Read teh input file and explore the  data
Idaho_housing <- read.csv("Idaho housing data 2006.csv")
head(Idaho_housing)
# Split the names of the dataframe and get the 123 rd element
names_Id_hous<- names(Idaho_housing)
strsplit(names_Id_hous,"wgtp")[[123]]
# Load the GDP data, take care of the title , header lines, and the additional data at the bottome of the file
GDP_data <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, sep=",",  nrows=190, colClasses = c("character", "character", "NULL", "character", "character", rep("NULL",5)))
names(GDP_data) <- c("CountryCode","Ranking","Economy", "GDPValue")
# View the rows in the loaded dataframe
head(GDP_data$GDPValue)
# Remove the , from the GDP value as well as the leading and trailing spaces
GDP_data$GDPValue<- str_trim(gsub(",","",GDP_data$GDPValue))
library(stringr)
# Remove the , from the GDP value as well as the leading and trailing spaces
GDP_data$GDPValue<- str_trim(gsub(",","",GDP_data$GDPValue))
# Convert the character value into numeric
value <- as.numeric(GDP_data$GDPValue)
# Find the mean fo the GDPvalue variable
mean(value, na.rm=TRUE)
mtcars
mtcars.rownames()
mtcars.rownames
mtcars.rowname
rownames(mtcars)
cut(mtcars$mpg, pretty(rownames(mtcars)))
pretty(rownames(mtcars))
pretty(mtcars$mpg)
cut(mtcars, pretty(mtcars$mpg))
pretty(mtcars$mpg)
cut(mtcars$mpg, pretty(mtcars$mpg))
table(rownames(mtcars), cut(mtcars$mpg, pretty(mtcars$mpg))
table(rownames(mtcars), cut(mtcars$mpg, pretty(mtcars$mpg)))
table(cut(mtcars$mpg, pretty(mtcars$mpg)))
setwd("C:\\Users\\Ishwa\\Desktop\\DataScience\\R\\Getting and Cleaning Data")
edu <- read.csv(EDSTATS.csv)
edu <- read.csv("EDSTATS.csv"")
edu <- read.csv("EDSTATS.csv")
setwd("C:\\Users\\Ishwa\\Desktop\\DataScience\\R\\Getting and Cleaning Data")
edu <- read.csv("EDSTATS.csv")
getwd()
setwd("C:\\Users\\Ishwa\\Desktop\\DataScience\\R\\Getting and Cleaning Data")
setwd("C:\\Users\\Ishwa\\Desktop\\DataScience\\R\\Getting and Cleaning Data")
edu <- read.table("Sample Text.txt")
edu <- read.table("Sample Text.txt", fill=TRUE)
edu
?read.delim
setwd("C:\\Users\\Ishwa\\Desktop\\DataScience\\R\\Getting and Cleaning Data")
sam_txt_tab<- read.delim("Sample Text Tab Delim.txt", fill=TRUE, sep="\t")
sam_txt_tab
sam_txt_tab<- read.delim("Sample Text Tab Delim.txt", fill=TRUE, sep="\t")
sam_txt_tab
sam_txt_tab<- read.delim("Sample Text Tab Delim.txt", fill=TRUE, sep="\t")
sam_txt_tab<- read.delim2("Sample Text Tab Delim.txt", fill=TRUE, sep="\t")
sam_txt_tab<- read.delim2("Sample Text Tab Delim.txt", fill=TRUE, sep="\t")
sam_txt_tab
hflights
library(hflights)
hflights
?tbl
?tbl
library(tibble)
?tbl
hflights1<- tbl(hflights)
hflights1<- as.tbl(hflights)
hflights1<- as.tibble(hflights)
carriers <- hflights1$UniqueCarrier
carriers
hflights$UniqueCarrier
hflights$UniqueCarrier
abrCarrier <- c("AA" = "American", "AS" = "Alaska", "B6" = "JetBlue", "CO" = "Continental", "DL" = "Delta", "OO" = "SkyWest", "UA" = "United", "US" = "US_Airways", "WN" = "Southwest", "EV" = "Atlantic_Southeast", "F9" = "Frontier", "FL" = "AirTran", "MQ" = "American_Eagle", "XE" = "ExpressJet", "YV" = "Mesa")
abrCarrier
abrCarrier[AA]
abrCarrier["AA"]
lappy(hflights&UniqueCarrier, function(x){abrCarrier[x]})
lapply(hflights&UniqueCarrier, function(x){abrCarrier[x]})
names(hflights)
lapply(hflights&UniqueCarrier, function(x){abrCarrier[x]})
lapply(hflight$UniqueCarrier, function(x){abrCarrier[x]})
lapply(hflights$UniqueCarrier, function(x){abrCarrier[x]})
mutate(hflights, Carrier=sapply(hflights$UniqueCarrier, function(x){abrCarrier[x]}))
hflights$Carrier=sapply(hflights$UniqueCarrier, function(x){abrCarrier[x]}))
hflights$Carrier=sapply(hflights$UniqueCarrier, function(x){abrCarrier[x]})
head(hflights, 20)
tail(hflights, 20)
glimpse(hflights)
